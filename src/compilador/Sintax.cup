package compilador;

import java_cup.runtime.Symbol;

parser code {: /* Retorno del símbolo que se está realizando */
    private Symbol s;
    
    public void syntax_error(Symbol s){
        this.s = s;}

    public Symbol getS(){
        return this.s;}
:};

terminal LINEA, LLAVEAPERTURA, LLAVECIERRE, PARENTESISAPERTURA, PARENTESISCIERRE, CORCHETEAPERTURA, CORCHETECIERRE,  
    COMILLAS, PUNTOYCOMA, DOSPUNTOS, PUNTO, IDENTIFICADOR, OPERADOR_INCREMENTO, OPERADOR_POSITIVO, OPERADOR_IGUAL,
    OPERADOR_RELACIONAL, TIPO_DATO, RESERVADA, VARIABLE, NUMERO, ERROR;
non terminal INICIO, SENTENCIA, INICIALIZACION, CONDICION, INCREMENTO, INSTRUCCION, IMP_INSTRUCCION;

start with INICIO;

INICIO ::= SENTENCIA;

SENTENCIA ::= RESERVADA PARENTESISAPERTURA INICIALIZACION PUNTOYCOMA CONDICION PUNTOYCOMA INCREMENTO PARENTESISCIERRE LLAVEAPERTURA INSTRUCCION LLAVECIERRE;

INICIALIZACION ::= TIPO_DATO OPERADOR_IGUAL NUMERO;

CONDICION ::= IDENTIFICADOR OPERADOR_RELACIONAL OPERADOR_IGUAL NUMERO;  
                  
INCREMENTO ::= IDENTIFICADOR OPERADOR_INCREMENTO;

INSTRUCCION ::= RESERVADA PUNTO RESERVADA PUNTO RESERVADA PARENTESISAPERTURA IMP_INSTRUCCION PARENTESISCIERRE PUNTOYCOMA;

IMP_INSTRUCCION ::= COMILLAS VARIABLE DOSPUNTOS COMILLAS OPERADOR_POSITIVO NUMERO;